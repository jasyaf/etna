<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure_9_0.dtd">

<!-- =============================================================== -->
<!-- Documentation of this file format can be found at: -->
<!-- http://wiki.eclipse.org/Jetty/Reference/jetty.xml_syntax -->
<!-- -->
<!-- Additional configuration files are available in $JETTY_HOME/etc -->
<!-- and can be mixed in. See start.ini file for the default -->
<!-- configuration files. -->
<!-- -->
<!-- For a description of the configuration mechanism, see the -->
<!-- output of: -->
<!-- java -jar start.jar -? -->
<!-- =============================================================== -->

<!-- =============================================================== -->
<!-- Configure a Jetty Server instance with an ID "Server" -->
<!-- Other configuration files may also configure the "Server" -->
<!-- ID, in which case they are adding configuration to the same -->
<!-- instance. If other configuration have a different ID, they -->
<!-- will create and configure another instance of Jetty. -->
<!-- Consult the javadoc of o.e.j.server.Server for all -->
<!-- configuration that may be set here. -->
<!-- =============================================================== -->
<Configure id="Server" class="org.eclipse.jetty.server.Server">

    <!-- =========================================================== -->
    <!-- Configure the Server Thread Pool. -->
    <!-- The server holds a common thread pool which is used by -->
    <!-- default as the executor used by all connectors and servlet -->
    <!-- dispatches. -->
    <!-- -->
    <!-- Configuring a fixed thread pool is vital to controlling the -->
    <!-- maximal memory footprint of the server and is a key tuning -->
    <!-- parameter for tuning. In an application that rarely blocks -->
    <!-- then maximal threads may be close to the number of 5*CPUs. -->
    <!-- In an application that frequently blocks, then maximal -->
    <!-- threads should be set as high as possible given the memory -->
    <!-- available. -->
    <!-- -->
    <!-- Consult the javadoc of o.e.j.util.thread.QueuedThreadPool -->
    <!-- for all configuration that may be set here. -->
    <!-- =========================================================== -->
    <Get name="ThreadPool">
        <Set name="minThreads">10</Set>
        <Set name="maxThreads">400</Set>
        <Set name="idleTimeout">60000</Set>
        <Set name="detailedDump">false</Set>
        <Set name="name">QTP</Set>
    </Get>

    <!-- =========================================================== -->
    <!-- Add shared Scheduler instance -->
    <!-- =========================================================== -->
    <Call name="addBean">
        <Arg>
            <New class="org.eclipse.jetty.util.thread.ScheduledExecutorScheduler" />
        </Arg>
    </Call>

    <!-- =========================================================== -->
    <!-- Http Configuration. -->
    <!-- This is a common configuration instance used by all -->
    <!-- connectors that can carry HTTP semantics (HTTP, HTTPS, SPDY) -->
    <!-- It configures the non wire protocol aspects of the HTTP -->
    <!-- semantic. -->
    <!-- -->
    <!-- This configuration is only defined here and is used by -->
    <!-- reference from the jetty-http.xml, jetty-https.xml and -->
    <!-- jetty-spdy.xml configuration files which instantiate the -->
    <!-- connectors. -->
    <!-- -->
    <!-- Consult the javadoc of o.e.j.server.HttpConfiguration -->
    <!-- for all configuration that may be set here. -->
    <!-- =========================================================== -->
    <New id="httpConfig" class="org.eclipse.jetty.server.HttpConfiguration">
        <Set name="secureScheme">https</Set>
        <Set name="securePort">8443</Set>
        <Set name="outputBufferSize">32768</Set>
        <Set name="requestHeaderSize">8192</Set>
        <Set name="responseHeaderSize">8192</Set>
        <Set name="sendServerVersion">false</Set>
        <Set name="sendDateHeader">false</Set>
        <Set name="headerCacheSize">512</Set>
    </New>

    <!-- =========================================================== -->
    <!-- HTTP配置，端口号修改请修改port字段 -->
    <!-- =========================================================== -->
    <Call name="addConnector">
        <Arg>
            <New class="org.eclipse.jetty.server.ServerConnector">
                <Arg name="server">
                    <Ref refid="Server" />
                </Arg>
                <Arg name="factories">
                    <Array type="org.eclipse.jetty.server.ConnectionFactory">
                        <Item>
                            <New class="org.eclipse.jetty.server.HttpConnectionFactory">
                                <Arg name="config">
                                    <Ref refid="httpConfig" />
                                </Arg>
                            </New>
                        </Item>
                    </Array>
                </Arg>
                <Set name="host"></Set>
                <Set name="port">8080</Set>
                <Set name="idleTimeout">60000</Set>
            </New>
        </Arg>
    </Call>

    <!-- =========================================================== -->
    <!-- HTTPS 安全HTTP通道的配置，如果需要请将<Call name="addConnector">这一段的注释打开 -->

    <!-- 本地生成证书的步骤： -->

    <!-- 1、命令行下使用jdk的keytool工具生成keystore -->
    <!-- keytool -keystore sslKeyStore.jks -alias jetty -genkey -keyalg RSA -->

    <!-- 2、生成证书 -->
    <!-- keytool -export -alias jetty -file jetty.crt -keystore sslKeyStore.jks -->

    <!-- 3、生成OBA文件,这里的[password]是第1步填写的密码 -->
    <!-- java -cp jetty-all-9.0.6.v20130930.jar org.eclipse.jetty.util.security.Password [password] -->

    <!-- =========================================================== -->
    <Call name="addConnector">
        <Arg>
            <New class="org.eclipse.jetty.server.ServerConnector">
                <Arg name="server">
                    <Ref refid="Server" />
                </Arg>
                <Arg name="factories">
                    <Array type="org.eclipse.jetty.server.ConnectionFactory">
                        <Item>
                            <New class="org.eclipse.jetty.server.SslConnectionFactory">
                                <Arg name="sslContextFactory">
                                    <New class="org.eclipse.jetty.util.ssl.SslContextFactory">
                                        <Set name="keyStorePath">web/WEB-INF/sslKeyStore.jks</Set>
                                        <Set name="keyStorePassword">OBF:1xmg1saj1v941v9i1sar1xmu</Set>
                                        <Set name="keyManagerPassword">OBF:1xmg1saj1v941v9i1sar1xmu</Set>
                                    </New>
                                </Arg>
                                <Arg name="next">HTTP/1.1</Arg>
                            </New>
                        </Item>
                        <Item>
                            <New class="org.eclipse.jetty.server.HttpConnectionFactory">
                                <Arg name="config">
                                    <Ref refid="httpConfig" />
                                </Arg>
                            </New>
                        </Item>
                    </Array>
                </Arg>
                <Set name="host"></Set>
                <Set name="port">8443</Set>
                <Set name="idleTimeout">60000</Set>
            </New>
        </Arg>
    </Call>

    <!-- =========================================================== -->
    <!-- Set handler Collection Structure -->
    <!-- =========================================================== -->
    <Set name="handler">
        <New class="org.eclipse.jetty.webapp.WebAppContext">
            <Set name="throwUnavailableOnStartupException">true</Set>
            <Set name="contextPath">/</Set>
            <Set name="war">web</Set>
            <Set name="defaultsDescriptor">org/etnaframework/core/web/webdefault.xml</Set>
            <Set name="descriptor">WEB-INF/web.xml</Set>
        </New>
    </Set>

    <!-- =========================================================== -->
    <!-- extra options -->
    <!-- =========================================================== -->
    <Set name="stopAtShutdown">true</Set>
    <Set name="dumpAfterStart">false</Set>
    <Set name="dumpBeforeStop">false</Set>
    <Set name="stopTimeout">0</Set>
</Configure>
